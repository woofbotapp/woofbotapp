{
  "name": "woofbot",
  "version": "0.7.0",
  "main": "index.js",
  "license": "SEE LICENSE IN ./LICENSE",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "devDependencies": {
    "yarn-audit-fix": "^9.3.7"
  },
  "scripts": {
    "docker:create-network": "docker network create --subnet=172.18.0.0/16 woofbotnetwork",
    "docker:stop-container": "wrap () { if [ -n \"$(docker ps -a -q -f name=$1)\" ]; then docker stop $1 ; fi }; wrap",
    "docker:stop-all-containers": "yarn docker:stop-container woofbot-mongodb-dev-container && yarn docker:stop-container woofbot-container && yarn docker:stop-container woofbot-server-dev-container",
    "docker:clean": "yarn docker:stop-container woofbot-container && yarn docker:stop-container woofbot-server-dev-container && for IMAGE_ID in $(docker images -q 'woofbot/*'); do docker image rm $IMAGE_ID; done",
    "docker:build-server-dev": "docker buildx build -f Dockerfile-server-dev --platform linux/amd64 --progress plain --tag woofbot/woofbot-server-dev . --load",
    "docker:build-to-registry": "docker buildx build --platform linux/arm64,linux/amd64 --progress plain --tag woofbot/woofbot:v$(node -p \"require('./package.json').version\") . --output type=registry",
    "dev:mongodb": "mkdir -p dev-mongodb-data && yarn docker:stop-container woofbot-mongodb-dev-container && docker run --rm --sig-proxy=true --net woofbotnetwork --ip 172.18.0.2 -p 27017:27017 -v $PWD/dev-mongodb-data:/data/db --name woofbot-mongodb-dev-container mongo:4.4.6-bionic",
    "dev:bitcoind:fill-conf": "if [ ! -f 'dev-bitcoind-data/.bitcoin/bitcoin.conf' ]; then mkdir -p dev-bitcoind-data/.bitcoin dev-bitcoind-data/data1 dev-bitcoind-data/data2 && cp dev-bitcoin.conf dev-bitcoind-data/.bitcoin/bitcoin.conf && cp dev-bitcoin2.conf dev-bitcoind-data/data2/bitcoin.conf; fi",
    "dev:bitcoind": "yarn dev:bitcoind:fill-conf && yarn docker:stop-container bitcoind-node && docker run --rm --sig-proxy=true --net woofbotnetwork --ip 172.18.0.3 -p 29000:29000 -p 18444:18444 -p 18443:18443 -v $PWD/dev-bitcoind-data/.bitcoin:/bitcoin/.bitcoin -v $PWD/dev-bitcoind-data/data1:/bitcoin/data1 -v $PWD/dev-test-scenarios:/test-scenarios --name bitcoind-node kylemanna/bitcoind@sha256:b4e1c7e5c3e51557a625c053c875c0ee69f88a51a92f21b6f7b71b0f3cc6f6cc",
    "dev:bitcoind:bash": "docker exec -it \"$(docker ps -aqf \"name=bitcoind-node\")\" /bin/bash",
    "dev:client": "yarn client dev",
    "dev:server-docker": "wrap() { if [ -z \"$1\" ]; then echo 'Missing env file parameter'; exit 1; fi; if [ -z \"$(docker images -q 'woofbot/woofbot-server-dev')\" ]; then echo 'Server dev image not found, must run first: yarn docker:build-server-dev'; exit 1; fi; yarn docker:stop-container woofbot-server-dev && . $PWD/$1 && docker run --rm -i -t -p 8080:8080 -v $PWD/packages/server/src:/app/packages/server/src --env-file $PWD/$1 --name woofbot-server-dev-container woofbot/woofbot-server-dev; }; wrap",
    "dev:server:standalone": "yarn dev:server-docker .env.dev-standalone-docker",
    "dev:server:polar": "set -o allexport && source .env.dev-polar && set +o allexport && yarn server dev --verbose",
    "dev:build": "yarn common lint && yarn common build && yarn client lint && yarn server lint && yarn docker:build-server-dev && echo 'ðŸš€ Dev environment was built successfully. You can now run in separated shells \"yarn dev:mongodb\", \"yarn dev:client\" and either:\n- \"yarn dev:bitcoind\", \"yarn dev:server:standalone\"\nOr\n- \"yarn dev:server:polar\" with a bitcoin node running by Polar (see https://lightningpolar.com)'",
    "client": "yarn workspace @woofbot/client",
    "common": "yarn workspace @woofbot/common",
    "server": "yarn workspace @woofbot/server",
    "start": "yarn server start",
    "lint": "yarn common lint && yarn client lint && yarn server lint",
    "clean": "yarn common clean && yarn client clean && yarn server clean",
    "clean-all": "rimraf dev-mongodb-data dev-bitcoind-data && yarn clean && yarn docker:clean"
  },
  "dependencies": {}
}
